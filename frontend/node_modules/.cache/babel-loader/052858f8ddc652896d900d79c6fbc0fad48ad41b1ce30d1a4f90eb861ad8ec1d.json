{"ast":null,"code":"var _jsxFileName = \"D:\\\\OSPanel\\\\domains\\\\vsosh_api\\\\frontend\\\\src\\\\components\\\\MainContent\\\\Authorization\\\\Form.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport classes from './Form.module.css';\nimport FormBtn from '../Buttons/FormButtons/FormBtn';\n\n// Создаем контекст пользователя внутри Form компонента\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/React.createContext();\nexport const useUser = () => {\n  _s();\n  return useContext(UserContext);\n};\n_s(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst Form = () => {\n  _s2();\n  const {\n    setLoggedInUser\n  } = useUser();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/api/v1/token/', {\n        username,\n        password\n      });\n      if (response.data.access) {\n        // Если есть access, то пользователь успешно авторизован\n        setLoggedInUser(username);\n        // Очистите поля ввода после успешной авторизации\n        setUsername('');\n        setPassword('');\n      } else {\n        // В случае ошибки отобразите сообщение\n        console.error('Ошибка при авторизации');\n      }\n    } catch (error) {\n      console.error('Произошла ошибка при отправке запроса:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      setLoggedInUser\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.Form,\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.FormInput,\n        name: \"username\",\n        required: true,\n        placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.FormInput,\n        name: \"password\",\n        required: true,\n        placeholder: \"\\u0412\\u0430\\u0448 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormBtn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s2(Form, \"KhYV3nQXh1BsLVSwzba8ILpmUqE=\", false, function () {\n  return [useUser];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useContext","axios","classes","FormBtn","jsxDEV","_jsxDEV","UserContext","createContext","useUser","_s","Form","_s2","setLoggedInUser","username","setUsername","password","setPassword","handleLogin","e","preventDefault","response","post","data","access","console","error","Provider","value","children","className","onSubmit","FormInput","name","required","placeholder","type","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/OSPanel/domains/vsosh_api/frontend/src/components/MainContent/Authorization/Form.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport classes from './Form.module.css';\r\nimport FormBtn from '../Buttons/FormButtons/FormBtn';\r\n\r\n// Создаем контекст пользователя внутри Form компонента\r\nconst UserContext = React.createContext();\r\n\r\nexport const useUser = () => {\r\n  return useContext(UserContext);\r\n};\r\n\r\nconst Form = () => {\r\n  const { setLoggedInUser } = useUser();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post('http://127.0.0.1:8000/api/v1/token/', {\r\n        username,\r\n        password,\r\n      });\r\n\r\n      if (response.data.access) {\r\n        // Если есть access, то пользователь успешно авторизован\r\n        setLoggedInUser(username);\r\n        // Очистите поля ввода после успешной авторизации\r\n        setUsername('');\r\n        setPassword('');\r\n      } else {\r\n        // В случае ошибки отобразите сообщение\r\n        console.error('Ошибка при авторизации');\r\n      }\r\n    } catch (error) {\r\n      console.error('Произошла ошибка при отправке запроса:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ setLoggedInUser }}>\r\n      <form className={classes.Form} onSubmit={handleLogin}>\r\n        <input\r\n          className={classes.FormInput}\r\n          name='username'\r\n          required\r\n          placeholder='Ваше имя'\r\n          type='text'\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          className={classes.FormInput}\r\n          name='password'\r\n          required\r\n          placeholder='Ваш пароль'\r\n          type='password'\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <FormBtn />\r\n      </form>\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}