{"ast":null,"code":"var _jsxFileName = \"D:\\\\OSPanel\\\\domains\\\\vsosh_api\\\\frontend\\\\src\\\\components\\\\Discussion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport classes from './Discussion.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Discussion = ({\n  taskId,\n  TaskName,\n  setDiscussionVisible,\n  comments,\n  setComments\n}) => {\n  _s();\n  const [comment, setComment] = useState('');\n  const fetchComments = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`http://127.0.0.1:8000/api/v1/comments/`);\n      setComments(response.data.filter(comment => comment.task === taskId));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    fetchComments();\n  }, [taskId]);\n  const handleAddComment = async () => {\n    if (comment) {\n      try {\n        const newComment = {\n          user: 1,\n          // Замените на актуальный идентификатор пользователя\n          task: taskId,\n          content: comment\n        };\n\n        // Отправка комментария на сервер\n        await axios.post('http://127.0.0.1:8000/api/v1/comments/create/', newComment);\n\n        // После успешного добавления комментария, загружаем обновленный список комментариев\n        fetchComments();\n        setComment('');\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  const handleCloseDiscussion = () => {\n    setDiscussionVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.Discussion,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.DiscussionContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCloseDiscussion,\n        className: classes.CloseButton,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.DiscussionTitle,\n        children: TaskName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Discussions,\n        children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.DiscussionContent,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.CommentPerson,\n            children: comment.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.Comment,\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.CommentInputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: classes.CommentInput,\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n        value: comment,\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        className: classes.DiscussionBtn,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Discussion, \"PZYHW2boZGKKDkYLNSsgVnRcFlA=\");\n_c = Discussion;\nexport default Discussion;\nvar _c;\n$RefreshReg$(_c, \"Discussion\");","map":{"version":3,"names":["React","useState","useEffect","axios","classes","jsxDEV","_jsxDEV","Discussion","taskId","TaskName","setDiscussionVisible","comments","setComments","_s","comment","setComment","fetchComments","setLoading","response","get","data","filter","task","error","console","handleAddComment","newComment","user","content","post","handleCloseDiscussion","className","children","DiscussionContainer","onClick","CloseButton","fileName","_jsxFileName","lineNumber","columnNumber","DiscussionTitle","Discussions","map","index","DiscussionContent","CommentPerson","username","Comment","CommentInputContainer","CommentInput","placeholder","value","onChange","e","target","DiscussionBtn","_c","$RefreshReg$"],"sources":["D:/OSPanel/domains/vsosh_api/frontend/src/components/Discussion.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport classes from './Discussion.module.css';\r\n\r\nconst Discussion = ({ taskId, TaskName, setDiscussionVisible, comments, setComments }) => {\r\n  const [comment, setComment] = useState('');\r\n  const fetchComments = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(`http://127.0.0.1:8000/api/v1/comments/`);\r\n      setComments(response.data.filter(comment => comment.task === taskId));\r\n    } catch (error) {\r\n      console.error(error);\r\n    } \r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, [taskId]);\r\n\r\n  const handleAddComment = async () => {\r\n    if (comment) {\r\n      try {\r\n\r\n        const newComment = {\r\n          user: 1, // Замените на актуальный идентификатор пользователя\r\n          task: taskId,\r\n          content: comment,\r\n        };\r\n\r\n        // Отправка комментария на сервер\r\n        await axios.post('http://127.0.0.1:8000/api/v1/comments/create/', newComment);\r\n\r\n        // После успешного добавления комментария, загружаем обновленный список комментариев\r\n        fetchComments();\r\n        setComment('');\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCloseDiscussion = () => {\r\n    setDiscussionVisible(false);\r\n  };\r\n\r\n  return (\r\n    <section className={classes.Discussion}>\r\n      <div className={classes.DiscussionContainer}>\r\n        <button onClick={handleCloseDiscussion} className={classes.CloseButton}>\r\n          &times;\r\n        </button>\r\n        <div className={classes.DiscussionTitle}>{TaskName}</div>\r\n        <div className={classes.Discussions}>\r\n          {comments.map((comment, index) => (\r\n            <div key={index} className={classes.DiscussionContent}>\r\n              <div className={classes.CommentPerson}>{comment.username}</div>\r\n              <div className={classes.Comment}>{comment.content}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className={classes.CommentInputContainer}>\r\n        <textarea\r\n          className={classes.CommentInput}\r\n          placeholder=\"Введите комментарий\"\r\n          value={comment}\r\n          onChange={(e) => setComment(e.target.value)}\r\n        />\r\n        <button onClick={handleAddComment} className={classes.DiscussionBtn}>\r\n          Добавить комментарий\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Discussion;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}