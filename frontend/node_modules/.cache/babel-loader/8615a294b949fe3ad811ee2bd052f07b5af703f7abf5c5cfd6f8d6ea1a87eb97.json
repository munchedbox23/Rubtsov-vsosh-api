{"ast":null,"code":"var _jsxFileName = \"D:\\\\OSPanel\\\\domains\\\\vsosh_api\\\\frontend\\\\src\\\\components\\\\Discussion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport classes from './Discussion.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Discussion = ({\n  TaskName,\n  setDiscussionVisible\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState('');\n\n  // Загрузка комментариев при монтировании компонента\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/api/v1/comments/', {\n      headers: {}\n    }).then(response => response.json()).then(data => {\n      console.log('Комментарии успешно загружены:', data);\n      setComments(data);\n    }).catch(error => {\n      console.error('Ошибка при загрузке комментариев:', error);\n    });\n  }, []); // Пустой массив зависимостей, чтобы эффект выполнялся только при монтировании компонента\n\n  const handleAddComment = () => {\n    if (comment) {\n      const newComment = {\n        commentPerson: 'Пользователь',\n        comment: comment\n      };\n      fetch('http://127.0.0.1:8000/api/v1/comments/create/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newComment)\n      }).then(response => response.json()).then(data => {\n        console.log('Комментарий успешно добавлен:', data);\n        const updatedComments = [...comments, data];\n        setComments(updatedComments);\n        setComment('');\n      }).catch(error => {\n        console.error('Ошибка при добавлении комментария:', error);\n      });\n    }\n  };\n  const handleCloseDiscussion = () => {\n    setDiscussionVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.Discussion,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.DiscussionContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCloseDiscussion,\n        className: classes.CloseButton,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.DiscussionTitle,\n        children: TaskName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Discussions,\n        children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.DiscussionContent,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.CommentPerson,\n            children: comment.commentPerson\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.Comment,\n            children: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.CommentInputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: classes.CommentInput,\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n        value: comment,\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        className: classes.DiscussionBtn,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Discussion, \"vDMNQUtDpjPqquTzbqtVZcuIh7s=\");\n_c = Discussion;\nexport default Discussion;\nvar _c;\n$RefreshReg$(_c, \"Discussion\");","map":{"version":3,"names":["React","useState","useEffect","classes","jsxDEV","_jsxDEV","Discussion","TaskName","setDiscussionVisible","_s","comments","setComments","comment","setComment","fetch","headers","then","response","json","data","console","log","catch","error","handleAddComment","newComment","commentPerson","method","body","JSON","stringify","updatedComments","handleCloseDiscussion","className","children","DiscussionContainer","onClick","CloseButton","fileName","_jsxFileName","lineNumber","columnNumber","DiscussionTitle","Discussions","map","index","DiscussionContent","CommentPerson","Comment","CommentInputContainer","CommentInput","placeholder","value","onChange","e","target","DiscussionBtn","_c","$RefreshReg$"],"sources":["D:/OSPanel/domains/vsosh_api/frontend/src/components/Discussion.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport classes from './Discussion.module.css';\r\n\r\nconst Discussion = ({ TaskName, setDiscussionVisible }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [comment, setComment] = useState('');\r\n\r\n  // Загрузка комментариев при монтировании компонента\r\n  useEffect(() => {\r\n    fetch('http://127.0.0.1:8000/api/v1/comments/', {\r\n      headers: {\r\n        \r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log('Комментарии успешно загружены:', data);\r\n        setComments(data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Ошибка при загрузке комментариев:', error);\r\n      });\r\n  }, []); // Пустой массив зависимостей, чтобы эффект выполнялся только при монтировании компонента\r\n\r\n  const handleAddComment = () => {\r\n    if (comment) {\r\n      const newComment = {\r\n        commentPerson: 'Пользователь',\r\n        comment: comment,\r\n      };\r\n\r\n      fetch('http://127.0.0.1:8000/api/v1/comments/create/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newComment),\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log('Комментарий успешно добавлен:', data);\r\n        const updatedComments = [...comments, data];\r\n        setComments(updatedComments);\r\n        setComment('');\r\n      })\r\n      .catch(error => {\r\n        console.error('Ошибка при добавлении комментария:', error);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCloseDiscussion = () => {\r\n    setDiscussionVisible(false);\r\n  };\r\n\r\n  return (\r\n    <section className={classes.Discussion}>\r\n      <div className={classes.DiscussionContainer}>\r\n        <button onClick={handleCloseDiscussion} className={classes.CloseButton}>\r\n          &times;\r\n        </button>\r\n        <div className={classes.DiscussionTitle}>{TaskName}</div>\r\n        <div className={classes.Discussions}>\r\n          {comments.map((comment, index) => (\r\n            <div key={index} className={classes.DiscussionContent}>\r\n              <div className={classes.CommentPerson}>{comment.commentPerson}</div>\r\n              <div className={classes.Comment}>{comment.comment}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className={classes.CommentInputContainer}>\r\n        <textarea\r\n          className={classes.CommentInput}\r\n          placeholder=\"Введите комментарий\"\r\n          value={comment}\r\n          onChange={(e) => setComment(e.target.value)}\r\n        />\r\n        <button onClick={handleAddComment} className={classes.DiscussionBtn}>\r\n          Добавить комментарий\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Discussion;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}