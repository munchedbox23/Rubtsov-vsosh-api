{"ast":null,"code":"var _jsxFileName = \"D:\\\\OSPanel\\\\domains\\\\vsosh_api\\\\frontend\\\\src\\\\components\\\\Discussion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport classes from './Discussion.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Discussion = ({\n  TaskName\n}) => {\n  _s();\n  const [visible, setVisible] = useState(true);\n  const [comment, setComment] = useState(''); // Состояние для хранения текста комментария\n  const [comments, setComments] = useState([]); // Состояние для хранения массива комментариев\n\n  const handleAddComment = () => {\n    // При нажатии на кнопку \"Добавить комментарий\" добавляем новый комментарий в массив\n    if (comment) {\n      const newComment = {\n        commentPerson: 'Пользователь',\n        // Замените на актуальное имя пользователя\n        comment: comment\n      };\n      setComments([...comments, newComment]);\n      setComment(''); // Очищаем текст комментария после добавления\n    }\n  };\n\n  return visible( /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.Discussion,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.DiscussionContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.DiscussionClose,\n        onClick: () => setVisible(false),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.DiscussionTitle,\n        children: TaskName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Discussions,\n        children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.DiscussionContent,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.CommentPerson,\n            children: comment.commentPerson\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.Comment,\n            children: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.CommentInputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: classes.CommentInput,\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n        value: comment,\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        className: classes.DiscussionBtn,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this));\n};\n_s(Discussion, \"4EMq8Clfjf8/bsf1cpuI05Qc6Yk=\");\n_c = Discussion;\nexport default Discussion;\nvar _c;\n$RefreshReg$(_c, \"Discussion\");","map":{"version":3,"names":["React","useState","classes","jsxDEV","_jsxDEV","Discussion","TaskName","_s","visible","setVisible","comment","setComment","comments","setComments","handleAddComment","newComment","commentPerson","className","children","DiscussionContainer","DiscussionClose","onClick","fileName","_jsxFileName","lineNumber","columnNumber","DiscussionTitle","Discussions","map","index","DiscussionContent","CommentPerson","Comment","CommentInputContainer","CommentInput","placeholder","value","onChange","e","target","DiscussionBtn","_c","$RefreshReg$"],"sources":["D:/OSPanel/domains/vsosh_api/frontend/src/components/Discussion.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport classes from './Discussion.module.css';\r\n\r\nconst Discussion = ({ TaskName }) => {\r\n\r\n  const [visible, setVisible] = useState(true);\r\n\r\n  const [comment, setComment] = useState(''); // Состояние для хранения текста комментария\r\n  const [comments, setComments] = useState([]); // Состояние для хранения массива комментариев\r\n\r\n  const handleAddComment = () => {\r\n    // При нажатии на кнопку \"Добавить комментарий\" добавляем новый комментарий в массив\r\n    if (comment) {\r\n      const newComment = {\r\n        commentPerson: 'Пользователь', // Замените на актуальное имя пользователя\r\n        comment: comment,\r\n      };\r\n      setComments([...comments, newComment]);\r\n      setComment(''); // Очищаем текст комментария после добавления\r\n    }\r\n  };\r\n\r\n  return visible  (\r\n    <section className={classes.Discussion}>\r\n      <div className={classes.DiscussionContainer}>\r\n      <div className={classes.DiscussionClose} onClick={() => setVisible(false)}>\r\n        &times;\r\n      </div>\r\n        <div className={classes.DiscussionTitle}>{TaskName}</div>\r\n        <div className={classes.Discussions}>\r\n          {comments.map((comment, index) => (\r\n            <div key={index} className={classes.DiscussionContent}>\r\n              <div className={classes.CommentPerson}>{comment.commentPerson}</div>\r\n              <div className={classes.Comment}>{comment.comment}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className={classes.CommentInputContainer}>\r\n        <textarea\r\n          className={classes.CommentInput}\r\n          placeholder=\"Введите комментарий\"\r\n          value={comment}\r\n          onChange={(e) => setComment(e.target.value)}\r\n        />\r\n        <button onClick={handleAddComment} className={classes.DiscussionBtn}>\r\n          Добавить комментарий\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Discussion;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}