{"ast":null,"code":"var _jsxFileName = \"D:\\\\OSPanel\\\\domains\\\\vsosh_api\\\\frontend\\\\src\\\\components\\\\MainContent\\\\Buttons\\\\FormButtons\\\\FormBtn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport classes from './Form.module.css';\nimport FormBtn from '../Buttons/FormButtons/FormBtn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    // Обработка входа\n  };\n\n  const handleRegister = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/v1/token/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Успешная регистрация:', data);\n        // Добавьте код для обработки успешной регистрации, например, сохранение токена\n      } else {\n        console.error('Ошибка при регистрации:', response.status);\n        // Добавьте код для обработки ошибки, например, отображение сообщения пользователю\n      }\n    } catch (error) {\n      console.error('Ошибка:', error.message);\n      // Добавьте код для обработки ошибки, например, отображение сообщения пользователю\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.Form,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: classes.FormInput,\n      name: \"username\",\n      required: true,\n      placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n      type: \"text\",\n      value: formData.username,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: classes.FormInput,\n      name: \"password\",\n      required: true,\n      placeholder: \"\\u0412\\u0430\\u0448 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      type: \"password\",\n      value: formData.password,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormBtn, {\n      onLogin: handleLogin,\n      onRegister: handleRegister\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"vAMF9lWixCuQ4tJ10M7Sg/2f9eE=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","classes","FormBtn","jsxDEV","_jsxDEV","Form","_s","formData","setFormData","username","password","handleInputChange","e","name","value","target","handleLogin","preventDefault","handleRegister","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","error","status","message","className","children","FormInput","required","placeholder","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onRegister","_c","$RefreshReg$"],"sources":["D:/OSPanel/domains/vsosh_api/frontend/src/components/MainContent/Buttons/FormButtons/FormBtn.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport classes from './Form.module.css';\r\nimport FormBtn from '../Buttons/FormButtons/FormBtn';\r\n\r\nconst Form = () => {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    password: '',\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    // Обработка входа\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:8000/api/v1/token/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('Успешная регистрация:', data);\r\n        // Добавьте код для обработки успешной регистрации, например, сохранение токена\r\n      } else {\r\n        console.error('Ошибка при регистрации:', response.status);\r\n        // Добавьте код для обработки ошибки, например, отображение сообщения пользователю\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка:', error.message);\r\n      // Добавьте код для обработки ошибки, например, отображение сообщения пользователю\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={classes.Form}>\r\n      <input\r\n        className={classes.FormInput}\r\n        name='username'\r\n        required\r\n        placeholder='Ваше имя'\r\n        type='text'\r\n        value={formData.username}\r\n        onChange={handleInputChange}\r\n      />\r\n      <input\r\n        className={classes.FormInput}\r\n        name='password'\r\n        required\r\n        placeholder='Ваш пароль'\r\n        type='password'\r\n        value={formData.password}\r\n        onChange={handleInputChange}\r\n      />\r\n      <FormBtn onLogin={handleLogin} onRegister={handleRegister} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}