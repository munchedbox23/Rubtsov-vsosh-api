{"ast":null,"code":"var _jsxFileName = \"D:\\\\OSPanel\\\\domains\\\\vsosh_api\\\\frontend\\\\src\\\\components\\\\Discussion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport classes from './Discussion.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Discussion = ({\n  TaskName,\n  setDiscussionVisible,\n  comments,\n  setComments\n}) => {\n  _s();\n  const [newComment, setNewComment] = useState('');\n  const [comment, setComment] = useState(''); // Состояние для хранения текста комментария\n  // const [comments, setComments] = useState([]); // Состояние для хранения массива комментариев\n\n  const handleAddComment = () => {\n    if (newComment.trim() !== '') {\n      const updatedComments = [...comments, newComment];\n      setComments(updatedComments);\n      setNewComment(''); // Очищаем поле ввода комментария\n    }\n    // При нажатии на кнопку \"Добавить комментарий\" добавляем новый комментарий в массив\n    // if (comment) {\n    //   const newComment = {\n    //     commentPerson: 'Пользователь', // Замените на актуальное имя пользователя\n    //     comment: comment,\n    //   };\n    //   setComments([...comments, newComment]);\n    //   setComment(''); // Очищаем текст комментария после добавления\n    // }\n  };\n\n  const handleCloseDiscussion = () => {\n    setDiscussionVisible(false); // вызываем функцию setDiscussionVisible, чтобы скрыть окно discussion\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.Discussion,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.DiscussionContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCloseDiscussion,\n        className: classes.CloseButton,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.DiscussionTitle,\n        children: TaskName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Discussions,\n        children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.DiscussionContent,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.CommentPerson,\n            children: comment.commentPerson\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.Comment,\n            children: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.CommentInputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: classes.CommentInput,\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n        value: comment,\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        className: classes.DiscussionBtn,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Discussion, \"LDUnzt7hEpPIVGB6/BV7ePdqsR0=\");\n_c = Discussion;\nexport default Discussion;\nvar _c;\n$RefreshReg$(_c, \"Discussion\");","map":{"version":3,"names":["React","useState","classes","jsxDEV","_jsxDEV","Discussion","TaskName","setDiscussionVisible","comments","setComments","_s","newComment","setNewComment","comment","setComment","handleAddComment","trim","updatedComments","handleCloseDiscussion","className","children","DiscussionContainer","onClick","CloseButton","fileName","_jsxFileName","lineNumber","columnNumber","DiscussionTitle","Discussions","map","index","DiscussionContent","CommentPerson","commentPerson","Comment","CommentInputContainer","CommentInput","placeholder","value","onChange","e","target","DiscussionBtn","_c","$RefreshReg$"],"sources":["D:/OSPanel/domains/vsosh_api/frontend/src/components/Discussion.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport classes from './Discussion.module.css';\r\n\r\n\r\n\r\nconst Discussion = ({ TaskName, setDiscussionVisible, comments, setComments}) => {\r\n\r\n  const [newComment, setNewComment] = useState('');\r\n  const [comment, setComment] = useState(''); // Состояние для хранения текста комментария\r\n  // const [comments, setComments] = useState([]); // Состояние для хранения массива комментариев\r\n\r\n  const handleAddComment = () => {\r\n    if (newComment.trim() !== '') {\r\n      const updatedComments = [...comments, newComment];\r\n      setComments(updatedComments);\r\n      setNewComment(''); // Очищаем поле ввода комментария\r\n    }\r\n    // При нажатии на кнопку \"Добавить комментарий\" добавляем новый комментарий в массив\r\n    // if (comment) {\r\n    //   const newComment = {\r\n    //     commentPerson: 'Пользователь', // Замените на актуальное имя пользователя\r\n    //     comment: comment,\r\n    //   };\r\n    //   setComments([...comments, newComment]);\r\n    //   setComment(''); // Очищаем текст комментария после добавления\r\n    // }\r\n  };\r\n\r\n  const handleCloseDiscussion = () => {\r\n    setDiscussionVisible(false); // вызываем функцию setDiscussionVisible, чтобы скрыть окно discussion\r\n  };\r\n\r\n  return (\r\n    <section className={classes.Discussion}>\r\n      <div className={classes.DiscussionContainer}>\r\n      <button onClick={handleCloseDiscussion}  className={classes.CloseButton}>\r\n            &times;\r\n      </button>\r\n        <div className={classes.DiscussionTitle}>{TaskName}</div>\r\n        <div className={classes.Discussions}>\r\n          {comments.map((comment, index) => (\r\n            <div key={index} className={classes.DiscussionContent}>\r\n              <div className={classes.CommentPerson}>{comment.commentPerson}</div>\r\n              <div className={classes.Comment}>{comment.comment}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className={classes.CommentInputContainer}>\r\n        <textarea\r\n          className={classes.CommentInput}\r\n          placeholder=\"Введите комментарий\"\r\n          value={comment}\r\n          onChange={(e) => setComment(e.target.value)}\r\n        />\r\n        <button onClick={handleAddComment} className={classes.DiscussionBtn}>\r\n          Добавить комментарий\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Discussion;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}