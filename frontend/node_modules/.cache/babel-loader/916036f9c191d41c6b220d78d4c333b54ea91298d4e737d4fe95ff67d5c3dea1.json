{"ast":null,"code":"var _jsxFileName = \"D:\\\\OSPanel\\\\domains\\\\vsosh_api\\\\frontend\\\\src\\\\components\\\\TaskBank.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Task from './Task';\nimport Discussion from './Discussion';\nimport classes from './TaskBank.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskBank = () => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [taskName, setTaskName] = useState('');\n  const [taskHref, setTaskHref] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const handleAddTask = () => {\n    const newTask = {\n      name: taskName,\n      creator: 'Имя автора',\n      // Замените на актуальное имя\n      hrefDisc: `discussion${tasks.length}`,\n      taskHref: taskHref\n    };\n    setTasks([...tasks, newTask]);\n    setOpen(false);\n    setTaskName('');\n    setTaskHref('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.TaskBank,\n    children: [tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Task, {\n        taskHref: task.taskHref,\n        taskName: task.name,\n        taskCreator: task.creator,\n        hrefDisc: task.hrefDisc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)), open && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Overlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Modal,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"taskName\",\n          type: \"text\",\n          value: taskName,\n          onChange: e => setTaskName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"taskHref\",\n          type: \"text\",\n          value: taskHref,\n          onChange: e => setTaskHref(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddTask(),\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), selectedTask && /*#__PURE__*/_jsxDEV(Discussion, {\n      TaskName: selectedTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskBank, \"njaECJNPqdntJ6PjWXlf/7G3l+g=\");\n_c = TaskBank;\nexport default TaskBank;\nvar _c;\n$RefreshReg$(_c, \"TaskBank\");","map":{"version":3,"names":["React","useState","Task","Discussion","classes","jsxDEV","_jsxDEV","TaskBank","_s","open","setOpen","taskName","setTaskName","taskHref","setTaskHref","tasks","setTasks","selectedTask","setSelectedTask","handleAddTask","newTask","name","creator","hrefDisc","length","className","children","map","task","index","taskCreator","fileName","_jsxFileName","lineNumber","columnNumber","Overlay","Modal","type","value","onChange","e","target","onClick","TaskName","_c","$RefreshReg$"],"sources":["D:/OSPanel/domains/vsosh_api/frontend/src/components/TaskBank.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Task from './Task';\r\nimport Discussion from './Discussion';\r\nimport classes from './TaskBank.module.css';\r\n\r\nconst TaskBank = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [taskName, setTaskName] = useState('');\r\n  const [taskHref, setTaskHref] = useState('');\r\n  const [tasks, setTasks] = useState([]);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n\r\n  const handleAddTask = () => {\r\n    const newTask = {\r\n      name: taskName,\r\n      creator: 'Имя автора', // Замените на актуальное имя\r\n      hrefDisc: `discussion${tasks.length}`,\r\n      taskHref: taskHref,\r\n    };\r\n\r\n    setTasks([...tasks, newTask]);\r\n\r\n    setOpen(false);\r\n    setTaskName('');\r\n    setTaskHref('');\r\n  };\r\n\r\n  return (\r\n    <div className={classes.TaskBank}>\r\n      {/* ... остальной JSX TaskBank */}\r\n      {tasks.map((task, index) => (\r\n        <div key={index}>\r\n          <Task\r\n            taskHref={task.taskHref}\r\n            taskName={task.name}\r\n            taskCreator={task.creator}\r\n            hrefDisc={task.hrefDisc}\r\n          />\r\n        </div>\r\n      ))}\r\n\r\n      {open && (\r\n        <div className={classes.Overlay}>\r\n          <div className={classes.Modal}>\r\n            <input\r\n              name=\"taskName\"\r\n              type=\"text\"\r\n              value={taskName}\r\n              onChange={(e) => setTaskName(e.target.value)}\r\n            />\r\n            <input\r\n              name=\"taskHref\"\r\n              type=\"text\"\r\n              value={taskHref}\r\n              onChange={(e) => setTaskHref(e.target.value)}\r\n            />\r\n            <button onClick={() => handleAddTask()}>Отправить</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {selectedTask && (\r\n        <Discussion TaskName={selectedTask} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskBank;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}